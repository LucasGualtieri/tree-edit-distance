@article{doi:10.1137/0218082,
author = {Zhang, Kaizhong and Shasha, Dennis},
title = {Simple Fast Algorithms for the Editing Distance between Trees and Related Problems},
journal = {SIAM Journal on Computing},
volume = {18},
number = {6},
pages = {1245-1262},
year = {1989},
doi = {10.1137/0218082},

URL = { 
    
        https://doi.org/10.1137/0218082
    
    

},
eprint = { 
    
        https://doi.org/10.1137/0218082
    
    

}
,
    abstract = { Ordered labeled trees are trees in which the left-to-right order among siblings is significant. The distance between two ordered trees is considered to be the weighted number of edit operations (insert, delete, and modify) to transform one tree to another. The problem of approximate tree matching is also considered. Specifically, algorithms are designed to answer the following kinds of questions:1. What is the distance between two trees? 2. What is the minimum distance between \$T\_1 \$ and \$T\_2 \$ when zero or more subtrees can be removed from \$T\_2 \$? 3. Let the pruning of a tree at node n mean removing all the descendants of node n. The analogous question for prunings as for subtrees is answered.A dynamic programming algorithm is presented to solve the three questions in sequential time \$O(|T\_1 | \times |T\_2 | \times \min ({\textit{depth}}(T\_1 ),{\textit{leaves}}(T\_1 )) \times \min ({\textit{depth}}(T\_2 ),{\textit{leaves}}(T\_2 )))\$ and space \$O(|T\_1 | \times |T\_2 |)\$ compared with \$O(|T\_1 | \times |T\_2 | \times ({\textit{depth}}(T\_1 ))^2 \times ({\textit{depth}}(T\_2 ))^2 )\$ for the best previous published algorithm due to Tai [J. Assoc. Comput. Mach., 26 (1979), pp, 422-433]. Further, the algorithm presented here can be parallelized to give time \$O(|T\_1 | \times |T\_2 |)\$. }
}
